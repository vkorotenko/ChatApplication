<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ChatApplication</name>
    </assembly>
    <members>
        <member name="T:ChatApplication.Code.AuthOptions">
            <summary>
            Опции для аутентификации
            </summary>
        </member>
        <member name="F:ChatApplication.Code.AuthOptions.ISSUER">
            <summary>
            Кто выдал
            </summary>
        </member>
        <member name="F:ChatApplication.Code.AuthOptions.AUDIENCE">
            <summary>
            Для кого этот ключ
            </summary>
        </member>
        <member name="F:ChatApplication.Code.AuthOptions.KEY">
            <summary>
            Пароль шифрования
            </summary>
        </member>
        <member name="F:ChatApplication.Code.AuthOptions.LIFETIME">
            <summary>
            Время жизни токена
            </summary>
        </member>
        <member name="M:ChatApplication.Code.AuthOptions.GetSymmetricSecurityKey">
            <summary>
            Получить ключ для шифрования
            </summary>
            <returns></returns>
        </member>
        <member name="T:ChatApplication.Controllers.AccountController">
            <summary>
            Контроллер для работы с аккаунтами
            </summary>
        </member>
        <member name="F:ChatApplication.Controllers.AccountController._userDs">
            <summary>
            пользовательский датастор
            </summary>
        </member>
        <member name="M:ChatApplication.Controllers.AccountController.#ctor(ChatApplication.Services.IDataStore{ChatApplication.Poco.ApplicationUser})">
            <summary>
            Конструктор с пользовательским датасорсом
            </summary>
            <param name="userDs"></param>
        </member>
        <member name="M:ChatApplication.Controllers.AccountController.Token(ChatApplication.Models.LoginModel)">
            <summary>
            Получение токена для приложения
            </summary>
            <param name="model">Модель входа</param>
            <returns></returns>
        </member>
        <member name="T:ChatApplication.Controllers.UserController">
            <summary>
            Класс для получения собеседников
            </summary>
        </member>
        <member name="F:ChatApplication.Controllers.UserController._applicationUserDataStore">
            <summary>
            пользовательский датастор
            </summary>
        </member>
        <member name="F:ChatApplication.Controllers.UserController._applicationCompanionDataStore">
            <summary>
            Копаньонский датастор
            </summary>
        </member>
        <member name="M:ChatApplication.Controllers.UserController.#ctor(ChatApplication.Services.IDataStore{ChatApplication.Poco.ApplicationUser},ChatApplication.Services.IDataStore{ChatApplication.Poco.Companion})">
            <summary>
            
            </summary>
            <param name="applicationUserDataStore"></param>
            <param name="applicationCompanionDataStore"></param>
        </member>
        <member name="M:ChatApplication.Controllers.UserController.Get">
            <summary>
            Получение залогоненого пользователя
            </summary>
            <returns></returns>
        </member>
        <member name="T:ChatApplication.Controllers.ValuesController">
            <summary>
            Контроллер значений
            </summary>
        </member>
        <member name="M:ChatApplication.Controllers.ValuesController.GetLogin">
            <summary>
            Информация о логоне
            </summary>
            <returns></returns>
        </member>
        <member name="M:ChatApplication.Controllers.ValuesController.GetRole">
            <summary>
            Получение роли пользователя
            </summary>
            <returns></returns>
        </member>
        <member name="T:ChatApplication.Models.LoginModel">
            <summary>
            Модель для входа в приложение
            </summary>
        </member>
        <member name="P:ChatApplication.Models.LoginModel.Id">
            <summary>
            Номер телефона пользователя
            </summary>
        </member>
        <member name="P:ChatApplication.Models.LoginModel.Password">
            <summary>
            Пароль для входа
            </summary>
        </member>
        <member name="T:ChatApplication.Models.Message">
            <summary>
            Сообщение пользователя
            </summary>
        </member>
        <member name="P:ChatApplication.Models.Message.Id">
            <summary>
            Идентификатор сообщения
            </summary>
        </member>
        <member name="P:ChatApplication.Models.Message.Body">
            <summary>
            Тело сообщения
            </summary>
        </member>
        <member name="P:ChatApplication.Models.Message.IsNew">
            <summary>
            Является ли сообщение новым
            </summary>
        </member>
        <member name="T:ChatApplication.Models.UploadFile">
            <summary>
            Загружаемый файл
            </summary>
        </member>
        <member name="P:ChatApplication.Models.UploadFile.Id">
            <summary>
            Идентификатор
            </summary>
        </member>
        <member name="P:ChatApplication.Models.UploadFile.Name">
            <summary>
            Имя файла
            </summary>
        </member>
        <member name="P:ChatApplication.Models.UploadFile.Upload">
            <summary>
            Время загрузки
            </summary>
        </member>
        <member name="P:ChatApplication.Models.UploadFile.Url">
            <summary>
            URL файла
            </summary>
        </member>
        <member name="T:ChatApplication.Poco.ApplicationUser">
            <inheritdoc />
            <summary>
            Модель пользователя в приложении
            </summary>    
        </member>
        <member name="P:ChatApplication.Poco.ApplicationUser.NewMessages">
            <summary>
            Общее количество новых сообщений.
            </summary>
        </member>
        <member name="P:ChatApplication.Poco.ApplicationUser.Companions">
            <summary>
            Компаньоны
            </summary>
        </member>
        <member name="T:ChatApplication.Poco.BaseUser">
            <summary>
            Базовый класс для всех пользователей
            </summary>
        </member>
        <member name="P:ChatApplication.Poco.BaseUser.Id">
            <summary>
            Идентификатор пользователя
            </summary>
        </member>
        <member name="P:ChatApplication.Poco.BaseUser.Name">
            <summary>
            Имя пользователя
            </summary>
        </member>
        <member name="P:ChatApplication.Poco.BaseUser.Description">
            <summary>
            Описание или девиз.
            </summary>
        </member>
        <member name="P:ChatApplication.Poco.BaseUser.Email">
            <summary>
            Адрес электронной почты
            </summary>
        </member>
        <member name="P:ChatApplication.Poco.BaseUser.Password">
            <summary>
            Пароль пользователя
            </summary>        
        </member>
        <member name="T:ChatApplication.Poco.Companion">
            <inheritdoc />
            <summary>
            Класс для компаньона
            </summary>
        </member>
        <member name="P:ChatApplication.Poco.Companion.TotalMessages">
            <summary>
            Общее количество новых сообщений.
            </summary>
        </member>
        <member name="P:ChatApplication.Poco.Companion.NewMessages">
            <summary>
            количество новых
            </summary>
        </member>
        <member name="T:ChatApplication.Program">
            <summary>
            Программа
            </summary>
        </member>
        <member name="M:ChatApplication.Program.Main(System.String[])">
            <summary>
            Точка входа
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:ChatApplication.Program.CreateWebHostBuilder(System.String[])">
            <summary>
            Билдер приложения
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:ChatApplication.Services.CompanionDataService">
            <summary>
            Дата сервис для доступа к данным
            </summary>
        </member>
        <member name="M:ChatApplication.Services.CompanionDataService.AddItemAsync(ChatApplication.Poco.Companion)">
            <summary>
            Добавить элемент
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:ChatApplication.Services.CompanionDataService.UpdateItemAsync(ChatApplication.Poco.Companion)">
            <summary>
            Обновить элемент
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:ChatApplication.Services.CompanionDataService.DeleteItemAsync(System.String)">
            <summary>
            Удалить элемент
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:ChatApplication.Services.CompanionDataService.GetItemAsync(System.String)">
            <summary>
            Получить элемент по первичному ключу
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:ChatApplication.Services.CompanionDataService.GetItemsAsync(System.Boolean)">
            <summary>
            Получить элементы 
            </summary>
            <param name="forceRefresh"></param>
            <returns></returns>
        </member>
        <member name="T:ChatApplication.Services.IDataStore`1">
            <summary>
            Data store interface
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:ChatApplication.Services.IDataStore`1.AddItemAsync(`0)">
            <summary>
            Add element to datastore
            </summary>
            <param name="item">Added element</param>
            <returns></returns>
        </member>
        <member name="M:ChatApplication.Services.IDataStore`1.UpdateItemAsync(`0)">
            <summary>
            Update element
            </summary>
            <param name="item">Element</param>
            <returns></returns>
        </member>
        <member name="M:ChatApplication.Services.IDataStore`1.DeleteItemAsync(System.String)">
            <summary>
            Delete element
            </summary>
            <param name="id">Element</param>
            <returns></returns>
        </member>
        <member name="M:ChatApplication.Services.IDataStore`1.GetItemAsync(System.String)">
            <summary>
            Get element by primary key
            </summary>
            <param name="id">Key</param>
            <returns></returns>
        </member>
        <member name="M:ChatApplication.Services.IDataStore`1.GetItemsAsync(System.Boolean)">
            <summary>
            Get all elements
            </summary>
            <param name="forceRefresh">Forse refresh datasorce.</param>
            <returns></returns>
        </member>
        <member name="T:ChatApplication.Services.IUserDs">
            <summary>
            Методы расширяющие пользовательский датасорс
            </summary>
        </member>
        <member name="M:ChatApplication.Services.IUserDs.GetItemById(System.String)">
            <summary>
            Получение пользователя по email
            </summary>
            <returns></returns>
        </member>
        <member name="T:ChatApplication.Services.UsersDataService">
            <summary>
            Обьект для получения пользователей
            </summary>
        </member>
        <member name="M:ChatApplication.Services.UsersDataService.#ctor">
            <summary>
            Конструктор по умолчанию
            </summary>
        </member>
        <member name="M:ChatApplication.Services.UsersDataService.AddItemAsync(ChatApplication.Poco.ApplicationUser)">
            <summary>
            Добавление элемента
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:ChatApplication.Services.UsersDataService.UpdateItemAsync(ChatApplication.Poco.ApplicationUser)">
            <summary>
            Обновление элемента
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:ChatApplication.Services.UsersDataService.DeleteItemAsync(System.String)">
            <summary>
            Удаление элемента
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:ChatApplication.Services.UsersDataService.GetItemAsync(System.String)">
            <summary>
            Получение элемента по идентификатору
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:ChatApplication.Services.UsersDataService.GetItemsAsync(System.Boolean)">
            <summary>
            Получение всех элементов
            </summary>
            <param name="forceRefresh"></param>
            <returns></returns>
        </member>
        <member name="M:ChatApplication.Services.UsersDataService.GetItemById(System.String)">
            <summary>
            Получение по email
            </summary>
            <returns></returns>
        </member>
        <member name="T:ChatApplication.Startup">
            <summary>
            Конфигурация сервера
            </summary>
        </member>
        <member name="M:ChatApplication.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Конструктор с конфигурацией сервера. Вызывается инфраструктурой при старте
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="P:ChatApplication.Startup.Configuration">
            <summary>
            Конфигурация приложения
            </summary>
        </member>
        <member name="M:ChatApplication.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Конфигурирование сервисов
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:ChatApplication.Startup.ConfigureDb(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Конфигурируем доступ к данным
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:ChatApplication.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IHostingEnvironment)">
            <summary>
            This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
            <param name="app"></param>
            <param name="env"></param>        
        </member>
    </members>
</doc>
